from nmap import PortScanner

from core.Scanning.Core import Device


class serviceDiscover:

    def __init__(self, lvl=2, tcp_range="1-1024", udp_range="1=1024"):
        self.scanner = PortScanner()
        self.lvl = 0
        self.tcp_range = tcp_range
        self.udp_range = udp_range
        self.change_lvl(lvl)

    def change_tcpRange(self, t_range):
        self.tcp_range = t_range

    def change_udpRange(self, u_range):
        self.udp_range = u_range

    def change_lvl(self, lvl):
        if lvl == 0:
            self.lvl = 10
        elif lvl == 1:
            self.lvl = 5
        elif lvl == 2:
            self.lvl = 2
        elif lvl == 3:
            self.lvl = 1
        elif lvl == 4:
            self.lvl = 0.5
        else:
            self.lvl = 0.2

    def scan(self, device: Device):
        tcp_args = '-A ' + str(self.lvl) + ' -p ' + self.tcp_range + ' -sV'
        tcp_res = self.scanner.scan(device.ip, arguments=tcp_args)
        device.os = tcp_res['scan'][device.ip]['osmatch'][0]['name']
        for a in tcp_res['scan'][device.ip]['tcp']:
            device.tcp_services[a] = tcp_res['scan'][device.ip]['tcp'][a]
        # Consider doing lists of ports for udp
        udp_args = '-sU ' + '-A ' + str(self.lvl) + ' -p ' + self.udp_range
        """
        udp_res = self.scanner.scan(device.ip, arguments=udp_args)
        for a in udp_res['scan'][device.ip]['udp']:
            device.udp_services[a] = udp_res['scan'][device.ip]['udp'][a]
        """

    def tcp_scan(self):
        return
