from bs4 import BeautifulSoup
from urllib.parse import urljoin
import requests
import sys

RUN_DETAILS = {
    "title": "Cross-site scripting Vulnerability Detection",
    "description": "Basic XSS Vulnerability detection.\n"
                   "Given a URL, grabs all HTML forms, then attempts to inject and submit harmless Javascript code "
                   "into the text and search input fields.\n"
                   "This is a general purpose XSS scanner, and will not work for all XSS-vulnerable services.",
    "services": ['tcp'],
    "args": ["url"],
}
# EXAMPLE OF VULNERABLE APPLICATION https://xss-game.appspot.com/level1/frame
# http://192.168.0.23/forum/ucp.php?mode=register
# CREDIT FOR SCRIPT TO TOMMASO BONA
# https://github.com/ParzivalHack/T-XSS
def get_forms(url):
    try:
        s = BeautifulSoup(requests.get(url).content, "html.parser")
        s = s.find_all("form")
        return s
    except requests.RequestException as e:
        return False
    except AttributeError as e:
        return False


def get_form_details(form):
    details = {}
    action = form.attrs.get("action").lower()
    method = form.attrs.get("method", "get").lower()
    inputs = []
    for input_tag in form.find_all("input"):
        input_type = input_tag.attrs.get("type", "text")
        input_name = input_tag.attrs.get("name")
        inputs.append({"type": input_type, "name": input_name})
    details["action"] = action
    details["method"] = method
    details["inputs"] = inputs
    return details


def submit_form(form_details, url, value):
    target_url = urljoin(url, form_details["action"])
    inputs = form_details["inputs"]
    data = {}
    for input in inputs:
        if input["type"] == "text" or input["type"] == "search":
            input["value"] = value
            input_name = input.get("name")
            input_value = input.get("value")
            if input_name and input_value:
                data[input_name] = input_value
        try:
            if form_details["method"] == "post":
                return requests.post(target_url, data=data)
            else:
                return requests.get(target_url, params=data)
        except requests.RequestException as e:
            return False


def scan_xss(url):
    forms = get_forms(url)
    if not forms:
        return False, "Error Getting URL"
    details = []
    js_script = "<Script>alert('XSS vulnerable')</scripT>"
    is_vulnerable = False
    for form in forms:
        form_details = get_form_details(form)
        content = submit_form(form_details, url, js_script).content.decode()
        if content and js_script in content:
            details.append(form_details)
            is_vulnerable = True
    if not is_vulnerable:
    	details.append("No vulerability found...")
    return is_vulnerable, str(details)


def run(url: list):
    return scan_xss(url[0])


