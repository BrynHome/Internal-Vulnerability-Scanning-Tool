class Database_record:
    def __init__(self, name, data, extra=""):
        self.id = name
        self.data = data
        self.extra = extra

    def get_data(self):
        return [self.id, self.data, self.extra]


class Database:

    def __init__(self, name, form):
        self.name = name
        self.format = form
        self.records = []

    def populate_db_raw_data(self, records):
        r = records.dropna(thresh=2)
        col = list(r.columns)
        if self.format == 2:
            for index, row in r.iterrows():
                new_record = Database_record(row[col[0]], row[col[1]])
                self.records.append(new_record)
        elif self.format >= 3:
            for index, row in r.iterrows():
                new_record = Database_record(row[col[0]], row[col[1]], row[col[2]])
                self.records.append(new_record)
        else:
            print("Improper database detected. Database import aborted.")
            return False
        return True

    def add_record(self, record):
        self.records.append(record)

    def change_name(self, name):
        self.name = name
