import logging
from IPython.display import clear_output
import core.Handler.receiver as recv
import core.Scanning.Network.NetExplorer as netExplore


class Driver:

    def __init__(self, subnet):
        self.network = netExplore.NetExplorer(subnet)

    def main_loop_direct(self):
        while True:
            menu = main_menu()
            choice = input(menu)
            if not self.cmd_parse(choice):
                break

    def main_loop_remote(self, remote):
        remote.connect()
        while True:
            cmd = remote.recv_command()
            if not self.cmd_parse(cmd):
                break
        remote.disconnect()

    def cmd_parse(self, command):
        if command == "4":
            return False
        elif command == "3":
            self.covert_change()
            return True
        elif command == "2":
            self.vuln_scan()
            return True
        elif command == "1":
            self.net_scan()
            return True
        else:
            return False

    def covert_change(self):
        while True:
            choice = input("Enter in new covert value 0-4\n0=Lowest Level of Covertness\n4=Highest Level of Covertness\n")
            if self.network.covert_change(choice):
                break


    def net_scan(self):
        choice = input("Network Scan Options\n1:Device Discovery\n2:Service Discovery\n")
        if choice == "1":
            self.network.deviceDiscover()
        elif choice == "2":
            self.network.serviceDiscov()
        return

    def vuln_scan(self):
        return


def start(mode, subnet):
    drive = Driver(subnet)
    if mode == "1":
        drive.main_loop_direct()
        return 1
    elif mode == "2":
        remote = recv.Receiver("192.168.0.0")
        drive.main_loop_remote(remote)
        return 1
    else:
        return 0


def main_menu():
    clear_output(wait=True)
    menu = ("Main Menu:\n1: Network Scan\n2: Vulnerability Scan"
            "\n3: Set Covert Level\n4: Exit\n")
    return menu
